plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.tripPlanner'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// 기본
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// REDIS (RefreshToken)
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	// Oauth2 (소셜로그인)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mariadb.jdbc:mariadb-java-client'


	// WebClient (API 요청 보내기 위한 의존성 추가)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//google Email API
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}
